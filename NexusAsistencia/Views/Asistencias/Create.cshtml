@model NexusAsistencia.Models.Asistencia

@{
    ViewBag.Title = "Asistencia";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Asistencia</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--DATOS DE USUARIO-->
        <div class="card mb-2">
            <div class="card-header bg-primary text-white"><h5>Datos de Empleado</h5></div>
            <div class="card-body ml-3 mr-3">
                <div class="row">
                    <div class="mr-3">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Empresa</span>
                            </div>
                            @Html.DropDownList("Ruc", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                        </div>
                    </div>
                    <div class="mr-3">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Local anexo</span>
                            </div>
                            @Html.DropDownList("IdAnexo", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                        </div>
                    </div>
                    <div class="mr-3">
                        <div class="input-group input-group-sm mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Usuario</span>
                            </div>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--DATOS DE USUARIO-->
        <!--registros-->
        <!--eNTRADA-->
        <div id="accordion">
            <div class="card mb-2">
                <div class="card-header bg-secondary text-white" id="headingOne">
                    <h5 class="mb-0">
                        <spam data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            ENTRADA
                        </spam>
                    </h5>
                </div>

                <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                    <div class="card-body">
                        <div class="row">
                            <!--DATOS ENTRADA-->
                            <div class="card col-md-3">
                                <div class="card-body">

                                    <dl>
                                        <dt>Dirección:</dt>
                                        <dd id="AneDir"></dd>
                                        <dt>Nota: </dt>
                                        <dd id="Nota"></dd>
                                        <dt>Cordenadas</dt>
                                        <dd>
                                            <input id="AneLat" class="form-control form-control-sm mb-2" type="number" readonly="readonly" value="" />
                                            <input id="AneLon" class="form-control form-control-sm mb-2" type="number" readonly="readonly" />
                                            Distancia entre puntos:
                                            <input id="DisMar" class="form-control form-control-sm mb-2 text-primary" type="number" readonly="readonly" />
                                            <input id="RanMet" class="form-control form-control-sm mb-2 text-primary" type="hidden" readonly="readonly" />
                                        </dd>

                                    </dl>

                                    <div class="form-group">
                                        <label>Hora den entrada</label>
                                        @Html.EditorFor(model => model.HorEnt, new { htmlAttributes = new { @class = "form-control form-control-sm text-primary", @readonly = "readonly" } })
                                    </div>

                                    <div class="input-group input-group-sm mb-3">
                                        <div id="updateMap" class="btn btn-outline-secondary col-md-12 mb-2">Actualizar ubicación</div>

                                        <div id="marcEntrada" class="btn btn-primary col-md-12">Marcar entrada</div>
                                    </div>

                                </div>
                            </div>
                            <!--MAPA ENTRADA-->
                            <div class="card col-md-9">
                                <div id="mapEntrada" class="card-body col-md-12" style="height:300px">

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--eNTRADA-->
        <!--registros-->
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="https://code.jquery.com/jquery-3.3.1.min.js"
                integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
                crossorigin="anonymous"></script>
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwjMbXc-77N3qkGgg08x5QlztRuO_ywqk"></script>*@
    @*<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>*@
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDwjMbXc-77N3qkGgg08x5QlztRuO_ywqk"></script>

    <script>

        /*Variables*/
        var GetRuc = function () {
            var Ruc = $("#Ruc").val();
            var ruc = new FormData();
            ruc.append('oruc', Ruc);
            return ruc;
        }

        var GetIdAne = function () {
            var ane = new FormData();
            ane.append('IdAnexo', $("#IdAnexo").val());
            return ane;
        }


        //seleccionar empresa
        $('#Ruc').on('change', function () {
            /*alert(this.value); //or alert($(this).val());*/
            getAnexos();
            console.log("Ruc:" + $("#Ruc").val());
            //limpia lat lon
            $("#AneLat").val("");
            $("#AneLon").val("");
        });

        //Trae lista anexos

        function getAnexos() {
            fetch("@Url.Action("GetAnexos")", {
                method: "POST",
                body:GetRuc()
            }).then(function (res) {
                return res.json()
            }).then(function (myJson) {
                console.log(myJson);

                //llenar lista
                $("#IdAnexo").empty().append($("<option></option>").val("0").html("Seleccione"));
                //llenar con json
                $.each(myJson, function (key, value) {
                    var option = $(document.createElement('option'));
                    option.html(value.Descri);
                    option.val(value.IdAnexo)
                    $("#IdAnexo").append(option);
                });
            });
        };

        //get latlon de anexo
        $("#IdAnexo").on('change', function () {
            fetch("@Url.Action("getAnexo")", {
                method: "POST",
                body: GetIdAne()
            }).then(function (res) {
                return res.json()
            }).then(function (myJson) {
                console.log("getIdAnexo");
                $("#AneLat").val(myJson.Latitu);
                $("#AneLon").val(myJson.Longit);
                $("#AneDir").text(myJson.DirAne);
                $("#Nota").text(myJson.Nota);
                $("#RanMet").val(myJson.RanMet);
            });
        });

    </script>


    @*Mapas*@
    <script type="text/javascript">

        function updateMap() {

            // Creating map object
            var map = new google.maps.Map(document.getElementById('map_canvas'), {
                zoom: 12,
                center: new google.maps.LatLng($("#AneLat").val(), $("#AneLon").val()),
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });

            // creates a draggable marker to the given coords
            var vMarker = new google.maps.Marker({
                position: new google.maps.LatLng($("#AneLat").val(), $("#AneLon").val()),
                draggable: true
            });

            // adds a listener to the marker
            // gets the coords when drag event ends
            // then updates the input with the new coords
            google.maps.event.addListener(vMarker, 'dragend', function (evt) {
                $("#txtLat").val(evt.latLng.lat().toFixed(6));
                $("#txtLng").val(evt.latLng.lng().toFixed(6));

                map.panTo(evt.latLng);
            });

            // centers the map on markers coords
            map.setCenter(vMarker.position);

            // adds the marker on the map
            vMarker.setMap(map);
        }


    </script>

    <script>

        $(document).ready(function () {
            getUbicacion();
        });

        //Variables Globales
        var AneLat;
        var AneLon;
        var Lat;
        var Lng;
        var ranMet;
        //Variables Globales

        $("#updateMap").click(function () {
            //Asignar valores
            AneLat = $("#AneLat").val();
            AneLon = $("#AneLon").val();
            //Asignar valores
            getUbicacion();
            creaMapa();
            //calcula distancia
            $("#DisMar").val(getDistanciaMetros(AneLat, AneLon, Lat, Lng).toFixed(2));
            //calcula distancia

        });
        $("#marcEntrada").click(function () {

            if ($("#IdAnexo").val() != 0) {

                $("#updateMap").click();
                var rango = $("#RanMet").val();
                var dista = $("#DisMar").val();
                if ( parseInt(dista) < parseInt(rango)) {

                    //Registro entrada
                    $("form").submit();
                    //Registro entrada
                }
                else {
                    alert("Esta muy alejado del rango permitido para el registro");
                }
            }
            else {
                alert("Seleccione local anexo")
            }

        });

        //Geolocalizacion
        function getUbicacion() {
            if (navigator.geolocation) {

            } else {
                alert("Navegador no acepta geolocalización")
            }

            function localizacion(position) {
                var latitude = position.coords.latitude;
                var longitude = position.coords.longitude;
                Lat = latitude;
                Lng = longitude;

                console.log("Latitud :" + latitude);
                console.log("Longitud :" + longitude);
            }
            function error() {
                alert("no se pudo obtener la ubicació")
            }
            navigator.geolocation.getCurrentPosition(localizacion, error)
        };
        //Geolocalizacion

        function creaMapa() {
            const myLatLng = { lat: Lat, lng: Lng };
            const aneLatLng = { lat: parseFloat(AneLat), lng: parseFloat(AneLon) }

            console.log(myLatLng)
            console.log(aneLatLng)

            const map = new google.maps.Map(document.getElementById("mapEntrada"), {
                zoom: 15,
                center: myLatLng,
            });
            new google.maps.Marker({
                position: myLatLng,
                map,
                label: "Yo!"
            });

            new google.maps.Marker({
                position: aneLatLng,
                map,
                label: "Centro de trabajo"
            });

        }

        function getDistanciaMetros(lat1, lon1, lat2, lon2) {
            rad = function (x) { return x * Math.PI / 180; }
            var R = 6378.137; //Radio de la tierra en km
            var dLat = rad(lat2 - lat1);
            var dLong = rad(lon2 - lon1);
            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat1)) *
                Math.cos(rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            console.log(c);
            //aquí obtienes la distancia en metros por la conversion 1Km =1000m
            var d = R * c * 1000;
            console.log(d);
            return d;
        }
    </script>

}
