@model NexusAsistencia.Models.Empresa

@{
    ViewBag.Title = "crear empresa";
}

<h4>Crear</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Empresa</h4>
        <hr />
        <div class="row">
            <div class="col-sm-4">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Ruc, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Ruc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ruc, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.RazSoc, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.RazSoc, new { htmlAttributes = new { @class = "form-control col-md-12 text-uppercase" } })
                    @Html.ValidationMessageFor(model => model.RazSoc, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.DirEmp, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.DirEmp, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.DirEmp, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Contac, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Contac, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contac, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.CelCon, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CelCon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CelCon, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">

                <input type="submit" value="Crear" class="btn btn-primary" />

        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
